PART A:

    1) Five components of a language:

        - Syntax and datatypes
        - Values
        - Environments
        - Behaviour specification
        - Behaviour implementation

    2) Racket files.

        - Syntax and datatypes          -> data-structures.rkt, lang.rkt
        - Values                        -> data-structures.rkt, lang.rkt
        - Environments                  -> environments.rkt
        - Behaviour specification       -> lang.rkt, interp.rkt
        - Behaviour implementation      -> lang.rkt, interp.rkt


PART B:

    1) We changed the environments.rkt file to create x, y, z initial values. 


    2) 
	[x=1]
	 [y=5]
	  [z=10]p

	(define init-env 
  	    (lambda ()
    		(extend-env 
     		'x (num-val 1)
     		(extend-env
      		'y (num-val 5)
      		(extend-env
       		'z (num-val 10)
       		   (empty-env))))))



PART C:

    - Expressed Values: Int + Bool + Str
    - Denoted Values:   Int + Bool + Str